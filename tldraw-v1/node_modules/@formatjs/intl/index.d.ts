import { MessageDescriptor } from '@formatjs/intl/src/types';
export * from '@formatjs/intl/src/types';
export declare function defineMessages<K extends keyof any, T = MessageDescriptor, U extends Record<K, T> = Record<K, T>>(msgs: U): U;
export declare function defineMessage<T>(msg: T): T;
export { createIntlCache, filterProps, DEFAULT_INTL_CONFIG, createFormatters, getNamedFormat, } from '@formatjs/intl/src/utils';
export * from '@formatjs/intl/src/error';
export { formatMessage } from '@formatjs/intl/src/message';
export type { FormatMessageFn } from '@formatjs/intl/src/message';
export { formatDate, formatDateToParts, formatTime, formatTimeToParts, } from '@formatjs/intl/src/dateTime';
export { formatDisplayName } from '@formatjs/intl/src/displayName';
export { formatList } from '@formatjs/intl/src/list';
export { formatPlural } from '@formatjs/intl/src/plural';
export { formatRelativeTime } from '@formatjs/intl/src/relativeTime';
export { formatNumber, formatNumberToParts } from '@formatjs/intl/src/number';
export { createIntl } from '@formatjs/intl/src/create-intl';
export type { CreateIntlFn } from '@formatjs/intl/src/create-intl';
//# sourceMappingURL=index.d.ts.map